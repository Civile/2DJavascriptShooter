__soldier.prototype.countXFromPlayer = function(monster){	return Math.floor(Player.xpos - monster.xpos);};__soldier.prototype.countYFromPlayer = function(monster){	return Math.floor(Player.ypos - monster.ypos);};__soldier.prototype.checkPlayerYDistance = function(monster){	if(Player.ypos < monster.ypos + 15)		return -1; 	if( Player.ypos > monster.ypos + 15 )		return 2; 	return 0;};	__soldier.prototype.canAchieveJumpOn = function(monster, solid_element){	var jumpDestination = {x: null, y: null };		jumpDestination.x = __soldier.prototype.calculateMaxJumpMovementOnXAxis(monster) + monster.xpos; 	jumpDestination.y = __soldier.prototype.calculateMaxJump(monster) + monster.ypos;		if(  jumpDestination.x >= solid_element.xpos && jumpDestination.y + monster.height <= solid_element.ypos )		return jumpDestination;		return false;};__soldier.prototype.isSolidUpon = function(monster, solid_element){	return (monster.ypos + monster.height) > solidPos.top;};__soldier.prototype.calculateMaxJump = function (monster) {
    var jump_vel = monster.jump_velocity;    var yPos = 0;    var t = jump_vel / CONST_GRAVITY;    while (jump_vel >= 0)        yPos -= jump_vel -= CONST_GRAVITY;    return yPos;
};__soldier.prototype.calculateMaxJumpMovementOnXAxis = function(monster){	var t = parseInt(monster.jump_velocity / CONST_GRAVITY);	return t * monster.xvel};